#include <iostream>
#include <vector>
#include <string>

// 3. ????????? ?? ????? ????????? ?? ???

int main() {
    std::string firstFragment;
    std::cin >> fir
    std::string secondFragment;
    int similarities = 0;
    int differences = 0;
    int index = 0;
    std::string firstElement = "";
    std::string secondElement = "";

    return 0;
}



// 3. ????????? ?? ????? ????????? ?? ???
std::cout << "Enter first code fragment:" << std::endl;
std::getline(cin, firstFragment);

std::cout << "Enter second code fragment:" << std::endl;
std::getline(std::cin, secondFragment);

// 2. ??????? ?? ????????? ?? ??????
std::vector<std::string> splitCodeIntoLines(std::string code) {
    std::vector<std::string> lines;
    std::istringstream codeStream(code);
    std::string line;
    while (getline(codeStream, line)) {
        lines.push_back(line);
    }
    return lines;
}

// 4. ????????? ?? ???? ?? ??????
std::vector<std::string> firstLines = splitCodeIntoLines(firstFragment);
std::vector<std::string> secondLines = splitCodeIntoLines(secondFragment);

// 5. ????????? ?? ???????? ??????? ?? ???????
for (index = 0; index < firstLines.size(); index++) {
    // 5.1 ???????? ???? ????????? ? ??-????? ?? ??? ?????
    if (firstLines[index].length() > 3) {
        firstElement = firstLines[index];
        secondElement = secondLines[index];

        // 5.2 ?????????? ?? ????? ???????? ? ?????????? ?? ?????????
        if (firstElement == secondElement) {
            similarities++;
            cout << "Similarity found at line " << index + 1 << endl;
        }
        else {
            differences++;
            cout << "Difference found at line " << index + 1 << endl;
        }
    }
}

// 6. ?????????? ?? ???????????
std::cout << "Number of similarities: " << similarities << std::endl;
std::cout << "Number of differences: " << differences << std::endl;
